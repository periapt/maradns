   Back to main page

                      FREQUENTLY ASKED QUESTIONS

INDEX

     1. I'm using an older version of MaraDNS

     2. How do I try out MaraDNS?

     3. What license is MaraDNS released under?

     4. How do I report bugs in MaraDNS?

     5. Some of the postings to the mailing list do not talk
     about MaraDNS!

     6. How do I get off the mailing list?

     7. How do I set up reverse DNS on MaraDNS?

     8. I am on a slow network, and MaraDNS can not process
     recursive queries

     9. When I try to run MaraDNS, I get a cryptic error
     message.

     10. After I start MaraDNS, I can not see the process when
     I run netstat -na

     11. What string library does MaraDNS use?

     12. Why does MaraDNS use a multi-threaded model?

     13. I feel that XXX feature should be added to MaraDNS

     14. I feel that MaraDNS should use another documentation
     format

     15. Is there any process I need to follow to add a patch
     to MaraDNS?

     16. Can MaraDNS act as a primary nameserver?

     17. Can MaraDNS act as a secondary nameserver?

     18. What is the difference between an authoritative and a
     recursive DNS server?

     19. The getzone client isn't allowing me to add certain
     hostnames to my zone

     20. Is MaraDNS portable?

     21. Can I use MaraDNS in Windows?

     22. MaraDNS freezes up after being used for a while

     23. What kind of Python integration does MaraDNS have

     24. Doesn't "kvar" mean "four" in Esperanto?

     25. How scalable is MaraDNS?

     26. I am having problems setting upstream_servers

     27. Why doesn't the MaraDNS.org web page validate?

     28. How do MX records work?

     29. Does MaraDNS have support for SPF?

     30. I'm having problems resolving CNAMES I have set up.

     31. I have a NS delegation, and MaraDNS is doing strange
     things.

     32. I am transferring a zone from another server, but the
     NS records are these strange "synth-ip" records.

     33. Where is the root.hints file?

     34. Are there any plans to use autoconf to build MaraDNS?

     35. How do I change the compiler or compile-time flags
     with MaraDNS' build process?

     36. Will you make a package for the particular Linux
     distribution I am using?

     37. I am using the native Windows port of MaraDNS, and
     some features are not working.

     38. MaraDNS isn't starting up

     39. You make a lot of releases of MaraDNS; at our ISP/IT
     department, updating software is non-trivial.

     40. I have star records in my zones, and am having
     problems with NXDOMAINs/IPV6 resolution

     41. I have a zone with only SOA/NS records, and the zone
     is not working.

     42. I am having problems registering my domain with AFNIC
     (the registrar for .fr domains)

     43. I can't see the full answers for subdomains I have
     delegated

     44. MaraDNS 1 has a problem resolving a domain

     45. MaraDNS 1.2 has issues with NXDOMAINS and case
     sensitivity.

     46. Can MaraDNS offer protection from phishing and
     malicious sites?

     47. Does maradns support star (wildcard) records?

     48. I'm having problems using MaraDNS with some *NIX
     command line applications like telnet

ANSWERS

1. I'm using an older version of MaraDNS

   Upgrade to MaraDNS 1.4. MaraDNS 1.4 is compatible with older
   versions of MaraDNS, with the relatively few changes need to
   upgrade documented.

   MaraDNS 1.0 and 1.2 are only supported for critical security
   updates, and will no longer be supported on December 21, 2010.
   MaraDNS 1.3 is also only supported for critical security
   updates, and support will stop on December 21, 2012. MaraDNS 1.4
   will be fully supported (security and other important bug fixes)
   for the foreseeable future, alongside MaraDNS 2.0 when and if it
   comes out.

2. How do I try out MaraDNS?

   Read the quick start guide, which is the file named
   0QuickStart in the MaraDNS distribution.

3. What license is MaraDNS released under?

   MaraDNS 1.2 is released with the following two-clause BSD-type
   license:

     Copyright (c) 2002-2009 Sam Trenholme and others

     TERMS

     Redistribution and use in source and binary forms, with or
     without modification, are permitted provided that the
     following conditions are met:

     1. Redistributions of source code must retain the above
     copyright notice, this list of conditions and the following
     disclaimer.

     2. Redistributions in binary form must reproduce the above
     copyright notice, this list of conditions and the following
     disclaimer in the documentation and/or other materials
     provided with the distribution.

     This software is provided 'as is' with no guarantees of
     correctness or fitness for purpose.

4. How do I report bugs in MaraDNS?

   Send an email to the MaraDNS mailing list. Details on how to do
   this are at http://www.maradns.org/

5. Some of the postings to the mailing list do not talk about MaraDNS!

   Topic drift sometimes happens. It's a part of life.

6. How do I get off the mailing list?

   Send an email to list-request@maradns.org with "unsubscribe" as
   the subject line.

7. How do I set up reverse DNS on MaraDNS?

   Reverse DNS (sometimes called "reverse mapping") is set up by
   using PTR (pointer) records. For example, the PTR record which
   performs the reverse DNS lookup for the ip 10.2.3.4 looks like
   this in a CSV2 zone file:

     4.3.2.10.in-addr.arpa. PTR www.example.com.

   It is also possible to use a special "FQDN4" which automatically
   sets up the reverse mapping of a given record:

     www.example.com. FQDN4 10.2.3.4

   If you wish to have a PTR (reverse DNS lookup; getting a DNS
   name from a numeric IP) record work on the internet at large, it
   is not a simple matter of just adding a record like this to a
   MaraDNS zonefile. One also needs control of the appropriate
   in-addr.arpa. domain.

   While it can make logical sense to contact the IP 10.11.12.13
   when trying to get the reverse DNS lookup (fully qualified
   domain name) for a given IP, DNS servers don't do this. DNS
   server, instead, contact the root DNS servers for a given
   in-addr.arpa name to get the reverse DNS lookup, just like they
   do with any other record type.

   When an internet service provider is given a block of IPs, they
   are also given control of the DNS zones which allow them to
   control reverse DNS lookups for those IPs. While it is possible
   to obtain a domain and run a DNS server without the knowledge or
   intervention of an ISP, being able to control reverse DNS
   lookups for those IPs requires ISP intervention.

8. I am on a slow network, and MaraDNS can not process recursive
queries

   MaraDNS, by default, only waits two seconds for a reply from a
   remote DNS server. This default can be increased by adding a
   line like this in the mararc file:

 timeout_seconds = 5

   Note that making this too high will slow MaraDNS down when DNS
   servers are down, which is, alas, all too common on today's
   internet.

9. When I try to run MaraDNS, I get a cryptic error message.

   There is usually some context of where there is a syntax error
   in a data file before the cryptic error message. For example,
   when there is a syntax error in a csv2 zone file, MaraDNS will
   tell you exactly at what point it had to terminate parsing of
   the zone file.

   If MaraDNS does return a cryptic error message without letting
   you know what is wrong, let us know on the mailing list so that
   we can fix the bug. MaraDNS is designed to be easy to use;
   cryptic error messages go against this spirit.

10. After I start MaraDNS, I can not see the process when I run
netstat -na

   Udp services do not have a prominent "LISTEN" when netstat is
   run.

   When MaraDNS is up, the relevant line in the netstat output
   looks like this: udp 0 0 127.0.0.1:53 0.0.0.0:*

   While on the topic of netstat, if you run netstat -nap as root
   on Linux and some other *nix operating systems, you can see the
   names of the processes which are providing internet services.

11. What string library does MaraDNS use?

   MaraDNS uses its own string library, which is called the
   "js_string" library. Man pages for most of the functions in the
   js_string library are in the folder doc/man of the MaraDNS
   distribution

12. Why does MaraDNS use a multi-threaded model?

   The multi-threaded model is, plain and simple, the simplest way
   to write a functioning recursive DNS server. There is a reason
   why MaraDNS, pdnsd, and BIND 9 all use the multi-threaded model.

   MaraDNS 2.0, when and if it is released, will not use threads.

13. I feel that XXX feature should be added to MaraDNS

   The only thing that will convince me to implement a given
   feature for MaraDNS is cold, hard cash. If you want me to keep a
   given feature proprietary, you better have lots of cold hard
   cash.

   Keep in mind that both the BIND and NSD name servers were
   developed by having the programmers paid to work on the
   programs. PowerDNS was originally commercial software with the
   author only reluctantly made GPL after seeing that the market
   for a commercial DNS server is very small. All of the other DNS
   servers which have been developed as hobbyist projects (Posadis,
   Pdnsd, and djbdns) are no longer being actively worked on by the
   primary developer.

14. I feel that MaraDNS should use another documentation format

   The reason that MaraDNS uses its own documentation format is to
   satisfy both the needs of translators to have a unified document
   format and my own need to use a documentation format that is
   simple enough to be readily understood and which I can add
   features on an as needed basis.

   The documentation format is essentially simplified HTML with
   some special tags added to meet MaraDNS' special needs.

   This gives me more flexibility to adapt the documentation format
   to changing needs. For example, when someone pointed out that
   it's not a good idea to have man pages with hi-bit characters,
   it was a simple matter to add a new HIBIT tag which allows man
   pages to be without hi-bit characters, and other document
   formats to retain hi-bit characters.

   Having a given program have its own documentation format is not
   without precedent; Perl uses its own "pod" documentation format.

15. Is there any process I need to follow to add a patch to MaraDNS?

   Yes.

   Here is the procedure for making a proper patch:

     * Enter the directory that the file is in, for example
       maradns-1.4.01/server
     * Copy over the file that you wish to modify to another file
       name. For example: cp MaraDNS.c MaraDNS.c.orig
     * Edit the file in question, e.g: vi MaraDNS.c
     * After editing, do something like this:
       diff -u MaraDNS.c.orig MaraDNS.c > maradns.patch
     * Make sure the modified version compiles cleanly

   Send a patch to the MaraDNS mailing list, along with a statement
   that you place the contents of the patch under MaraDNS' BSD
   license. If I find that the patch works well, I will integrate
   it in to MaraDNS.

16. Can MaraDNS act as a primary nameserver?

   Yes.

   The zoneserver program serves zones so that other DNS servers
   can be secondaries for zones which MaraDNS serves. This is a
   separate program from the maradns server, which processes both
   authoritative and recursive UDP DNS queries.

   See the DNS master document in the MaraDNS tutorial for
   details.

17. Can MaraDNS act as a secondary nameserver?

   Yes.

   Please read the DNS slave document, which is part of the
   MaraDNS tutorial.

18. What is the difference between an authoritative and a recursive
DNS server?

   A recursive DNS server is a DNS server that is able to contact
   other DNS servers in order to resolve a given domain name label.
   This is the kind of DNS server one points to in
   /etc/resolve.conf

   An authoritative DNS server is a DNS server that a recursive
   server contacts in order to find out the answer to a given DNS
   query.

19. The fetchzone client isn't allowing me to add certain hostnames to
my zone

   For security reasons, MaraDNS' fetchzone client does not add
   records which are not part of the zone in question. For example,
   if someone has a zone for example.com, and this record in the
   zone:

   1.1.1.10.in-addr.arpa. PTR dns.example.com.

   MaraDNS will not add the record, since the record is
   out-of-bailiwick. In other words, it is a host name that does
   not end in .example.com.

   There are two workarounds for this issue:

     * Create a zone file for 1.1.10.in-addr.arpa., and put the PTR
       records there.
     * Use rcp, rsync, or another method to copy over the zone
       files in question.

20. Is MaraDNS portable?

   MaraDNS is developed on a CentOS 5 and Windows XP dual boot
   laptop. MaraDNS may or may not compile and run on other systems.

21. Can I use MaraDNS in Windows?

   Yes. There is both a partial mingw32 (native win32 binary) port
   and a full Cygwin port of MaraDNS; both of these ports are part
   of the native build of MaraDNS. Deadwood has full Windows
   support, including the ability to run as a service.

22. MaraDNS freezes up after being used for a while

   There is a bug with the Linux kernel which causes UDP clients to
   freeze unless code is written to work around the kernel bug.
   This workaround was first introduced in MaraDNS 1.0.28 and
   1.1.35 and accidently disabled in 1.2.03.1.

   If using your ISP's name servers or some other name servers
   which are not, in fact, root name servers, please make sure that
   you are using the upstream_servers dictionary variable instead
   of the root_servers dictionary variable.

   If you still see MaraDNS freeze up after making this correction,
   please send a bug report to the mailing list.

23. What kind of Python integration does MaraDNS have

   The mararc file uses the same syntax that Python uses; in fact,
   Python can parse a properly formatted mararc file.

   There is currently no other integration with Python.

24. Doesn't "kvar" mean "four" in Esperanto?

   Indeed, it does. However the use of "kvar" in the MaraDNS source
   code only coincidentally is an Esperanto word. "kvar" is short
   for "Kiwi variable"; a lot of the parsing code comes from the
   code used in the Kiwi spam filter project.

25. How scalable is MaraDNS?

   MaraDNS is optimized for serving a small number of domains as
   quickly as possible. That said, MaraDNS is remarkably efficnent
   for serving a large number of domains, as long as the server
   MaraDNS is on has the memory to fit all of the domains, and as
   long as the startup time for loading a large number of domains
   can be worked around.

   The "big-O" or "theta" growth rates for various MaraDNS
   functions are as follows, where N is the number of authoritative
   host names being served:

 Startup time                            N
 Memory usage                            N
 Processing incoming DNS requests        1

   As can be seen, MaraDNS will process 1 or 100000 domains in the
   same amount of time, once the domain names are loaded in to
   memory.

26. I am having problems setting upstream_servers

   The upstream_servers mararc variable is set thusly:

     upstream_servers["."] = "10.3.28.79, 10.2.19.83"

   Note the ["."]. The reason for this is so future versions of
   MaraDNS may have more fine-grained control over the
   upstream_servers and root_servers values.

   Note that the upstream_servers variable needs to be initialized
   before being used via upstream_servers = {} (the reason for this
   is so that a mararc file has 100% Python-compatible syntax). A
   complete mararc file that uses upstream_servers may look like
   this:

 ipv4_bind_addresses = "127.0.0.1"
 chroot_dir = "/etc/maradns"
 recursive_acl = "127.0.0.1/8"
 upstream_servers = {}
 upstream_servers["."] = "10.1.2.3, 10.2.4.6"

27. Why doesn't the MaraDNS.org web page validate?

   HTML pages on the MaraDNS.org web site should validate as HTML
   4.0 Transitional. However, the CSS will not validate.

   I have designed MaraDNS' web page to be usable and as attractive
   as possible in any major browser released in the last ten years.
   Cross-browser support is more important than strict W3
   validation. The reason why the CSS does not validate is because
   I need a way to make sure there is always a scrollbar on the web
   page, even if the content is not big enough to merit one; this
   is to avoid the content jumping from page to page. There is no
   standard CSS tag that lets me do this. I'm using a non-standard
   tag to enable this in Gecko (Firefox's rendering engine); this
   is enabled by default in Trident (Internet Explorer's rendering
   engine). The standards are deficient and blind adherence to them
   would result in an inferior web site.

   There are also two validation warnings generated by
   redefinitions which are needed as part of the CSS filters used
   to make the site attractive on older browsers with limited CSS
   support.

   On a related note, the reason why I use tables instead of CSS
   for some of the layout is because Microsoft Internet Explorer 6
   and other browsers do not have support for the max-width CSS
   property. Without this property, the web page will not scale
   down correctly without using tables. Additionally, tables allow
   a reasonably attractive header in browsers without CSS support.

28. How do MX records work?

   How MX records work:

     * The mail transport agent (Sendmail, Postfix, Qmail, MS
       Exchange, etc.) looks up the MX record for the domain
     * For each of the records returned, the MTA (mail transport
       agent) looks up the IP for the names.
     * It will choose, at random, any of the MXes with the lowest
       priority number.
     * Should that server fail, it will try another server with the
       same priority number.
     * Should all MX records with a given priority number fail, the
       MTA will try sending email to any of the MX records with the
       second-lowest priority value.

   As an aside, do not have MX records point to CNAMEs.

29. Does MaraDNS have support for SPF?

   SPF, or sender policy framework, is method of using DNS that
   makes it more difficult to forge email. MaraDNS has full support
   for SPF, both via TXT records and, starting with MaraDNS 1.2.08,
   via RFC4408 SPF records.

   SPF configuration is beyond the scope of MaraDNS' documentation.
   However, at the time of this FAQ entry being written (June,
   2006), information and documentation concerning SPF is available
   at http://openspf.org. The BIND examples will work in
   MaraDNS csv2 zone files as long as the double quotes (") are
   replaced by single quotes ('). For example, a SPF TXT record
   that looks like example.net. IN TXT "v=spf1 +mx
   a:colo.example.com/28 -all" in a BIND zone file will look like
   example.net. TXT 'v=spf1 +mx a:colo.example.com/28 -all' in a
   MaraDNS zone file. MaraDNS version 1.2.08 and higher can also
   make the corresponding SPF record, which will have the syntax
   example.net. SPF 'v=spf1 +mx a:colo.example.com/28 -all'.

30. I'm having problems resolving CNAMES I have set up.

   This is probably because you have set up what MaraDNS calls a
   dangling CNAME record.

   Let us suppose we have a CNAME record without an A record in the
   local DNS server's database, such as:

         google.example.com. CNAME www.google.com.

   This record, which is a CNAME record for "google.example.com",
   points to "www.google.com". Some DNS servers will recursively
   look up www.google.com, and render the above record like this:

         google.example.com. CNAME www.google.com.
         www.google.com. CNAME 66.102.7.104

   For security reasons, MaraDNS doesn't do this. Instead, MaraDNS
   will simply output:

         google.example.com. CNAME www.google.com.

   Some stub resolvers will be unable to resolve google.example.com
   as a consequence.

   If you set up MaraDNS to resolve CNAMEs thusly, you will get a
   warning in your logs about having a dangling CNAME record.

   If you want to remove these warnings, add the following to your
   mararc file:

         no_cname_warnings = 1

   Information about how to get MaraDNS to resolve dangling CNAME
   records is in the tutorial file dangling.html

31. I have a NS delegation, and MaraDNS is doing strange things.

   In the case of there being a NS delegation, MaraDNS handles
   recursive queries and non-recursive DNS queries differently.
   Basically, unless you use askmara with the -n option, dig with
   the +norecuse option, or nslookup with the -norec option,
   MaraDNS will try to recursively resolve the record that is
   delegated.

   The thinking is this: A normal recursive DNS query is usually
   one where one wants to know the final DNS output. So, if MaraDNS
   delegates a given record to another DNS server, and gets a
   recursive request for said query, MaraDNS will recursively
   resolve the query for you.

   For example, let us suppose we have a mararc file that looks
   like this:

 chroot_dir = "/etc/maradns"
 ipv4_bind_addresses = "10.1.2.3"
 chroot_dir = "/etc/maradns"
 recursive_acl = "127.0.0.1/8, 10.0.0.0/8"
 csv2 = {}
 csv2["example.com."] = "db.example.com"

   And a db.example.com file that looks like this:

 www.example.com.        10.1.2.3
 joe.example.com.        NS ns.joe.example.com.
 ns.joe.example.com.     A 10.1.2.4

   Next, you are trying to find out why www.joe.example.com is not
   resolving. If you naively send a query to 10.1.2.3 for
   www.joe.example.com as askmara Awww.joe.example.com. 10.1.2.3 or
   as dig @10.1.2.3 www.joe.example.com. or as nslookup
   www.joe.example.com. 10.1.2.3, you will not get any information
   that will help you solve the problem, since 10.1.2.3 will try to
   contact 10.1.2.4 to resolve www.joe.example.com.

   The solution is to run your DNS query client thusly:

     * Askmara would be run thusly:

       askmara -n Awww.joe.example.com. 10.1.2.3

     * Dig would be run thusly:

       dig +norecurse @10.1.2.3 www.joe.example.com

     * Nslookup would be run thusly:

       nslookup -norec www.joe.example.com 10.1.2.3

   This will allow you to see that packets MaraDNS actually sends
   to a recursive DNS server.

   As an aside, this particular problem will not happen if MaraDNS
   is run only as an authoritative nameserver.

32. I am transferring a zone from another server, but the NS records
are these strange "synth-ip" records.

   MaraDNS expects, in csv2 zone files, for all delegation NS
   records to be between the SOA record and the first non-NS
   record.

   If a zone looks like this:

 example.net. +600 soa ns1.example.net.
 hostmaster@example.net 10 10800 3600 604800 1080
 example.net. +600 mx 10 mail.example.net.
 example.net. +600 a 10.2.3.5
 example.net. +600 ns ns1.example.net.
 example.net. +600 ns ns3.example.net.
 mail.example.net. +600 a 10.2.3.7
 www.example.net. +600 a 10.2.3.11

   Then the NS records will be "synth-ip" records.

   The zone should look like this:

 example.net. +600 soa ns1.example.net.
 hostmaster@example.net 10 10800 3600 604800 1080
 example.net. +600 ns ns1.example.net.
 example.net. +600 ns ns3.example.net.
 example.net. +600 mx 10 mail.example.net.
 example.net. +600 a 10.2.3.5
 mail.example.net. +600 a 10.2.3.7
 www.example.net. +600 a 10.2.3.11

   This will remove the "synth-ip" records.

   To automate this process, this awk script is useful:

 fetchzone whatever.zone.foo 10.1.2.3 | awk '
 {if($3 ~ /ns/ || $3 ~ /soa/){print}
 else{a = a "\n" $0}}
 END{print a}' > zonefile.csv2

   Replace "whatever.zone.foo" with the name of the zone you are
   fetchin 10.1.2.3 with the IP address of the DNS master, and
   zonefile.csv2 with the name of the zone file MaraDNS loads.

33. Where is the root.hints file?

   MaraDNS, unlike BIND, does not need a complicated root.hints
   file in order to have custom root servers. In order to change
   the root.hints file, add something like this to your mararc
   file:

 root_servers["."] =  "131.161.247.232,"
 root_servers["."] += "208.185.249.250,"
 root_servers["."] += "66.227.42.140,"
 root_servers["."] += "66.227.42.149,"
 root_servers["."] += "65.243.92.254"

   Note that there is no "+=" in the first line, and the last line
   does not have a comma at the end. Read the recursive tutorial
   document for more information.

34. Are there any plans to use autoconf to build MaraDNS?

   No. OK, let me qualify that: I won't do it unless you pay me
   enough money.

   In more detail, MaraDNS does not use autoconf for the following
   reasons:

     * Autoconf is designed to solve a problem that existed in the
       mid 1990s but does not exist today: A large number of
       different incompatible C compilers and libc implementations.
       These days, most systems are using gcc as the compiler and
       some version of glibc as the libc. There is no longer a
       need, for example, to figure out whether a given
       implementation of getopt() allows '--' options. MaraDNS's
       ./configure script can be run in only a second or two;
       compare this to the 3-5 minute process autoconf's
       ./configure needs.
     * Autoconf leaves GPL-tained files in a program's build tree.
       MaraDNS is licensed under a BSD license that is not
       GPL-compatible, so MaraDNS can not be distributed with these
       GPL-licensed files.

   This leads us to the next question:

35. How do I change the compiler or compile-time flags with MaraDNS'
build process?

   To change the compiler used by MaraDNS:

     * Run the ./configure script
     * Open up the file Makefile with an editor
     * Look for a line that starts with CC
     * If there is no line that starts with CC, create one just
       before the line that starts with FLAGS
     * Change (or create) that line to look something like
       CC=gcc296 In this example, the 2.96 version of gcc is used
       to compile MaraDNS.
     * Note that it is important to not remove anything from this
       line you do not understand; doing so will make MaraDNS
       unable to compile or run. So, if the CC line looks like
       CC=gcc $(LDFLAGS) -DNO_FLOCK and you want to compile with
       gcc 2.96, change the line to look like
       CC=gcc296 $(LDFLAGS) -DNO_FLOCK retaining the flags added by
       the configuration script.

   Changing compile-time flags is a similar process:

     * Run the ./configure script
     * Open up the file Makefile with an editor
     * Look for a line that starts with FLAGS
     * Change (or create) that line to look something like
       FLAGS=-O3 In this example, MaraDNS is compiled with the -O3
       option.
     * Note that it is important to not remove anything from this
       line you do not understand; doing so will make MaraDNS
       unable to compile or run. So, if the FLAGS line looks like
       FLAGS=-O2 -Wall -DSELECT_PROBLEM and you want to compile at
       optimization level three, change this line to look like
       FLAGS=-O2 -Wall -DSELECT_PROBLEM retaining the flags added
       by the configuration script. -DSELECT_PROBLEM for example,
       is needed in the Linux compile or MaraDNS will have problems
       with freezing up.

36. Will you make a package for the particular Linux distribution I am
using?

   No. OK, let me qualify that: I won't do it unless you pay me
   enough money.

   There is, however, a CentOS 5-compatible RPM spec file in the
   build directory.

37. I am using the native Windows port of MaraDNS, and some features
are not working.

   Since Windows 32 does not have some features that *NIX OSes
   have, the native Windows port does not have all of the features
   of the *NIX version of MaraDNS. In particular, the following
   features are disabled:

     * ipv6 (this is actually a mingw32, not a Windows deficiency)
     * The chroot_dir mararc variable
     * The maradns_gid and maradns_uid mararc variables
     * The maxprocs mararc variable
     * The synth_soa_serial variable can not have a value of 2

   If any of the above features are desired, try compiling MaraDNS
   using Cygwin. Note that the Cygwin port of MaraDNS does not have
   ipv6 support, and that while chroot_dir works in Cygwin, it does
   not have the security that the *NIX chroot() call has.

38. MaraDNS isn't starting up

   This is usually caused by a syntax error in one's mararc file,
   or by another MaraDNS process already running. To see what is
   happening, look at your system log (/var/log/messages in Centos
   3) to see what errors MaraDNS reports. If you do not know how to
   look at a system log, you can also invoke MaraDNS from the
   command line as root; any errors will be visible when starting
   MaraDNS.

39. You make a lot of releases of MaraDNS; at our ISP/IT department,
updating software is non-trivial.

   The number of releases seen in the changelog is not an
   accurate reflection of how often someone using a stable branch
   of MaraDNS will need to update.

   MaraDNS 1.2 and 1.3.07, the older stable branches of MaraDNS,
   were last updated in August of 2008.

   I go to a great deal of effort to make sure MaraDNS releases are
   as painless to update as possible. I ensure configuration file
   format compatibility, even between major versions of MaraDNS.
   With the exception of configuration file parser bugfixes,
   MaraDNS 1.0 configuration files are compatible with MaraDNS 1.4.

   It is impossible to make code that is bug-free or without
   security problems. This is especially true with code that runs
   on the public internet.^1 Code has to be updated from time to
   time. What I do in order to minimize the disruption caused by an
   update is to always have a stable bugfix-only branch of MaraDNS
   (right now I have two bugfix-only branches), and to, as much as
   possible, evenly space out the bugfix updates.

   Footnote 1: Even DJB's code has security problems. Both Qmail
   and DjbDNS have known security problems, and need to be patched
   before put on a public internet server.

40. I have star records in my zones, and am having problems with
NXDOMAINs/IPV6 resolution

   This was a bug in MaraDNS 1.2 which has long since been fixed.

41. I have a zone with only SOA/NS records, and the zone is not
working.

   MaraDNS 1.2 has a bug where it does not correctly process zones
   without any "normal" records. For example, suppose a zone like
   this:

 % SOA localhost. root@localhost. 1 7200 600 1209600 3600
 % NS localhost.

   This zone will not work until some non-SOA/NS record is added,
   such as in this zone file:

 % SOA localhost. root@localhost. 1 7200 600 1209600 3600
 % NS localhost.
 foo.% TXT 'MaraDNS 1.2 needs this record.'

   This bug has been fixed in MaraDNS 1.3 and 1.4; since this is
   not a security bug (there is a perfectly good workaround), this
   bug will not be fixed in MaraDNS 1.2 unless you pay me to fix
   it.

42. I am having problems registering my domain with AFNIC (the
registrar for .fr domains)

   Because of an issue with AFNIC (who, annoyingly enough, check
   the RA bit when registering a domain), in order to register a
   domain with AFNIC using MaraDNS as your DNS server, the
   following steps need to be followed:

     * MaraDNS version 1.4 needs to be used; if you're using an
       older version of MaraDNS, upgrade.
     * It is necessary to have recursion disabled. This can be done
       either by compiling MaraDNS without recursive support
       (./configure --authonly ; make), or by making sure MaraDNS
       does not have recursion enabled (by not having recursive_acl
       set in one's mararc file)

   If one wishes to both register domains with AFNIC and use
   MaraDNS as a recursive DNS server, it is required to have the
   recursive server be a separate instance of MaraDNS on a separate
   IP. It is not possible to have the same DNS server both send DNS
   packets in a way that both makes AFNIC happy and allows
   recursive queries.

   Note also: AFNIC gives warnings about reverse DNS lookups; more
   information about this issue can be found in the FAQ entry
   about reverse DNS mappings (question 7). In addition, AFNIC
   requires DNS-over-TCP to work; information on configuring
   MaraDNS to have this can be found in the DNS-over-TCP
   tutorial.

43. I can't see the full answers for subdomains I have delegated

   To have the subdomains be visible to recursive nameservers, add
   the following to your mararc file:

   recurse_delegation = 1

44. MaraDNS 1 has a problem resolving a domain

   This issue should be fixed when and if I release MaraDNS 2.0.

   Here's what happening: I'm rewriting the recursive resolver for
   MaraDNS. The old code was always designed to be a placeholder
   until I wrote a new recursive resolver.

   The new recursive resolver is called "Deadwood"; right now it's
   a fully functional non-recursive DNS cache. More information is
   here:

   http://maradns.blogspot.com/search/label/Deadwood

   http://maradns.org/deadwood/

   Since the old recursive code is a bit difficult to maintain, and
   since I in the process of rewriting the recursive code, my rule
   is that I will only resolve issues where an Alexa top 500 site
   can not resolve with MaraDNS' current recursive resolver at all.

   If resolving a given domain with MaraDNS' code is an urgent
   issue for you, please consider sponsoring MaraDNS:

   http://www.maradns.org/products.html

45. MaraDNS 1.2 has issues with NXDOMAINS and case sensitivity.

   There is a known bug in MaraDNS 1.2.12 where, should a client
   ask for a non-existent record in all caps, MaraDNS 1.2.12 will
   return a NXDOMAIN instead of a "not there" reply. This can cause
   there to be problems delivering email to the host in question if
   a mail transport agent asks for a name in all caps.

   If this is an issue for your organization, please upgrade to a
   newer version of MaraDNS; MaraDNS 1.4 does not have this bug. If
   you want to see this bug fixed in MaraDNS 1.2, please help
   sponsor MaraDNS.

46. Can MaraDNS offer protection from phishing and malicious sites?

   Yes.

   Here is a webpage that explains how its done:

   http://www.malwaredomains.com/?p=288

   Should that website be down, I have made a local mirror of the
   Perl script here:

   createmaradns-pl.txt

47. Does maradns support star (wildcard) records?

   Yes.

   MaraDNS supports both having stars at the beginning of records
   and the end of records. For example, to have
   anything.example.com. have the IP 10.1.2.3, add this line to the
   zone file for example.com:

   *.example.com. A 10.1.2.3

   To have stars at the end of records, csv2_default_zonefile has
   to be set. The mararc parameter bind_star_handling affects how
   star records are handled. More information is in the mararc
   man page.

48. I'm having problems using MaraDNS with some *NIX command line
applications like telnet.

   Some *NIX command line networking applications, such as telnet
   and ssh, try to do either a reverse DNS lookup (IP-to-host name
   conversion) or an IPv6 lookup. This slows things down and
   sometimes causes the applications to not work at all.

   For people who do not need IPv6 lookups, add the following line
   to one's mararc file to have MaraDNS respond to all IPv6 lookups
   with a bogus "not found" reply:

   reject_aaaa = 1

   If knowing the hostname a given IP has isn't important, these
   kinds of lookups can also be disabled:

   reject_ptr = 1
